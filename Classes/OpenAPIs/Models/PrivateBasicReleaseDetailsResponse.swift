//
// PrivateBasicReleaseDetailsResponse.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation

/** Basic information on a release for private apis */
public struct PrivateBasicReleaseDetailsResponse: Codable {

    public enum Origin: String, Codable, CaseIterable {
        case hockeyapp = "hockeyapp"
        case appcenter = "appcenter"
    }
    public enum DestinationType: String, Codable, CaseIterable {
        case group = "group"
        case store = "store"
        case tester = "tester"
    }
    /** ID identifying this unique release. */
    public var id: Int?
    /** The release&#39;s version.&lt;br&gt; For iOS: CFBundleVersion from info.plist.&lt;br&gt; For Android: android:versionCode from AppManifest.xml.  */
    public var version: String?
    /** The release&#39;s origin */
    public var origin: Origin?
    /** The release&#39;s short version.&lt;br&gt; For iOS: CFBundleShortVersionString from info.plist.&lt;br&gt; For Android: android:versionName from AppManifest.xml.  */
    public var shortVersion: String?
    /** UTC time in ISO 8601 format of the uploaded time. */
    public var uploadedAt: String?
    /** the destination id of release where it is distributed. */
    public var distributionGroupId: String?
    /** The destination type.&lt;br&gt; &lt;b&gt;group&lt;/b&gt;: The release distributed to internal groups and distribution_groups details will be returned.&lt;br&gt; &lt;b&gt;store&lt;/b&gt;: The release distributed to external stores and distribution_stores details will be returned. &lt;br&gt;  */
    public var destinationType: DestinationType?
    /** Indicates if this is the latest release in the group. */
    public var isLatest: Bool?
    /** A boolean which determines whether the release is a mandatory update or not. */
    public var mandatoryUpdate: Bool?
    /** the publishing status of the distributed release */
    public var publishingStatus: String?
    /** This value determines if a release is external or not. */
    public var isExternalBuild: Bool?

    public init(id: Int?, version: String?, origin: Origin?, shortVersion: String?, uploadedAt: String?, distributionGroupId: String?, destinationType: DestinationType?, isLatest: Bool?, mandatoryUpdate: Bool?, publishingStatus: String?, isExternalBuild: Bool?) {
        self.id = id
        self.version = version
        self.origin = origin
        self.shortVersion = shortVersion
        self.uploadedAt = uploadedAt
        self.distributionGroupId = distributionGroupId
        self.destinationType = destinationType
        self.isLatest = isLatest
        self.mandatoryUpdate = mandatoryUpdate
        self.publishingStatus = publishingStatus
        self.isExternalBuild = isExternalBuild
    }

    public enum CodingKeys: String, CodingKey, CaseIterable { 
        case id
        case version
        case origin
        case shortVersion = "short_version"
        case uploadedAt = "uploaded_at"
        case distributionGroupId = "distribution_group_id"
        case destinationType = "destination_type"
        case isLatest = "is_latest"
        case mandatoryUpdate = "mandatory_update"
        case publishingStatus = "publishing_status"
        case isExternalBuild = "is_external_build"
    }

}
