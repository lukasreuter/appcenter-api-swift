//
// ErrorGroup.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation


public struct ErrorGroup: Codable {

    public enum State: String, Codable, CaseIterable {
        case _open = "open"
        case closed = "closed"
        case ignored = "ignored"
    }
    public var state: State
    public var errorGroupId: String?
    public var appVersion: String?
    public var appBuild: String?
    public var count: Int64?
    public var deviceCount: Int64?
    public var firstOccurrence: Date?
    public var lastOccurrence: Date?
    public var exceptionType: String?
    public var exceptionMessage: String?
    public var exceptionClassName: String?
    public var exceptionClassMethod: Bool?
    public var exceptionMethod: String?
    public var exceptionAppCode: Bool?
    public var exceptionFile: String?
    public var exceptionLine: String?
    public var codeRaw: String?
    public var reasonFrames: [Any]?
    public var hidden: Bool?
    public var annotation: String?

    public init(state: State, errorGroupId: String?, appVersion: String?, appBuild: String?, count: Int64?, deviceCount: Int64?, firstOccurrence: Date?, lastOccurrence: Date?, exceptionType: String?, exceptionMessage: String?, exceptionClassName: String?, exceptionClassMethod: Bool?, exceptionMethod: String?, exceptionAppCode: Bool?, exceptionFile: String?, exceptionLine: String?, codeRaw: String?, reasonFrames: [Any]?, hidden: Bool?annotation: String?) {
        self.state = state
        self.errorGroupId = errorGroupId
        self.appVersion = appVersion
        self.appBuild = appBuild
        self.count = count
        self.deviceCount = deviceCount
        self.firstOccurrence = firstOccurrence
        self.lastOccurrence = lastOccurrence
        self.exceptionType = exceptionType
        self.exceptionMessage = exceptionMessage
        self.exceptionClassName = exceptionClassName
        self.exceptionClassMethod = exceptionClassMethod
        self.exceptionMethod = exceptionMethod
        self.exceptionAppCode = exceptionAppCode
        self.exceptionFile = exceptionFile
        self.exceptionLine = exceptionLine
        self.codeRaw = codeRaw
        self.reasonFrames = reasonFrames
        self.hidden = hidden
        self.annotation = annotation
    }

}
