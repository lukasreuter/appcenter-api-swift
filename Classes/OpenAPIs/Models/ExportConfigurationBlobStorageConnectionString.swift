//
// ExportConfigurationBlobStorageConnectionString.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation

/** Configuration for export to Blob Storage with customer provided connection string */
public struct ExportConfigurationBlobStorageConnectionString: Codable {

    public enum ModelType: String, Codable, CaseIterable {
        case blobStorageConnectionString = "blob_storage_connection_string"
        case applicationInsightsInstrumentationKey = "application_insights_instrumentation_key"
        case blobStorageLinkedSubscription = "blob_storage_linked_subscription"
        case applicationInsightsLinkedSubscription = "application_insights_linked_subscription"
    }
    public enum ExportEntities: String, Codable, CaseIterable {
        case crashes = "crashes"
        case errors = "errors"
        case attachments = "attachments"
        case noLogs = "no_logs"
    }
    /** Connection string for blob storage account */
    public var connectionString: String?
    /** Type of export configuration */
    public var type: ModelType
    public var exportEntities: [ExportEntities]?
    /** The resource name on azure */
    public var resourceName: String?
    /** The resource group name on azure */
    public var resourceGroup: String?
    /** Field to determine if backfilling should occur. The default value is true. If set to false export starts from date and time of config creation. */
    public var backfill: Bool?

    public init(connectionString: String?, type: ModelType, exportEntities: [ExportEntities]?, resourceName: String?, resourceGroup: String?, backfill: Bool?) {
        self.connectionString = connectionString
        self.type = type
        self.exportEntities = exportEntities
        self.resourceName = resourceName
        self.resourceGroup = resourceGroup
        self.backfill = backfill
    }

    public enum CodingKeys: String, CodingKey, CaseIterable { 
        case connectionString = "connection_string"
        case type
        case exportEntities = "export_entities"
        case resourceName = "resource_name"
        case resourceGroup = "resource_group"
        case backfill
    }

}
