//
// DataProvisioningParameters.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation


public struct DataProvisioningParameters: Codable {

    public enum ResourceRegion: String, Codable, CaseIterable {
        case eastAsia = "East Asia"
        case southeastAsia = "Southeast Asia"
        case australiaCentral = "Australia Central"
        case australiaCentral2 = "Australia Central 2"
        case australiaEast = "Australia East"
        case australiaSoutheast = "Australia Southeast"
        case brazilSouth = "Brazil South"
        case canadaCentral = "Canada Central"
        case canadaEast = "Canada East"
        case centralIndia = "Central India"
        case southIndia = "South India"
        case westIndia = "West India"
        case northEurope = "North Europe"
        case westEurope = "West Europe"
        case franceCentral = "France Central"
        case franceSouth = "France South"
        case germanyCentral = "Germany Central"
        case germanyNortheast = "Germany Northeast"
        case japanEast = "Japan East"
        case japanWest = "Japan West"
        case koreaCentral = "Korea Central"
        case koreaSouth = "Korea South"
        case southAfricaNorth = "South Africa North"
        case southAfricaWest = "South Africa West"
        case ukSouth = "UK South"
        case ukWest = "UK West"
        case centralUs = "Central US"
        case eastUs = "East US"
        case eastUs2 = "East US 2"
        case usGovArizona = "US Gov Arizona"
        case usGovTexas = "US Gov Texas"
        case northCentralUs = "North Central US"
        case southCentralUs = "South Central US"
        case westUs = "West US"
        case westUs2 = "West US 2"
        case westCentralUs = "West Central US"
    }
    public var subscriptionId: String?
    public var databaseConnectionString: String?
    public var resourceRegion: ResourceRegion?
    public var database: String?
    public var collection: String?
    public var requestUnits: Int64?
    public var accountName: String?

    public init(subscriptionId: String?, databaseConnectionString: String?, resourceRegion: ResourceRegion?, database: String?, collection: String?, requestUnits: Int64?, accountName: String?) {
        self.subscriptionId = subscriptionId
        self.databaseConnectionString = databaseConnectionString
        self.resourceRegion = resourceRegion
        self.database = database
        self.collection = collection
        self.requestUnits = requestUnits
        self.accountName = accountName
    }

}
