//
// ReleaseCreateRequest.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation

/** A request containing information for creating a release. */
public struct ReleaseCreateRequest: Codable {

    /** The release&#39;s version.&lt;br&gt; For iOS: CFBundleVersion from info.plist.&lt;br&gt; For Android: android:versionCode from AppManifest.xml.  */
    public var version: String?
    /** The release&#39;s short version.&lt;br&gt; For iOS: CFBundleShortVersionString from info.plist.&lt;br&gt; For Android: android:versionName from AppManifest.xml.  */
    public var buildVersion: String?
    /** The identifier of the app&#39;s bundle. */
    public var uniqueIdentifier: String?
    /** The release&#39;s minimum required operating system. */
    public var minimumOsVersion: String?
    /** The release&#39;s device family. */
    public var deviceFamily: String?
    /** The languages supported by the release. Limited to 510 characters in a serialized array. */
    public var languages: [String]?
    /** MD5 checksum of the release binary. */
    public var fingerprint: String
    /** The release&#39;s size in bytes. */
    public var size: Int
    /** The URL to the release&#39;s binary. */
    public var packageUrl: String?
    /** The file extension of the asset. Does not include the initial period. */
    public var fileExtension: String?
    /** The upload id associated with the release, to map to the releases upload table. */
    public var uploadId: String
    /** The assetId associated with the icon uploaded to app center file upload service. */
    public var iconAssetId: String?
    /** A list of UUIDs for architectures for an iOS app. */
    public var ipaUuids: [ReleaseCreateRequestIpaUuids]?
    public var provision: ReleaseCreateRequestProvision?
    /** iOS app extension provisioning profiles included in the release. */
    public var appexProvisioningProfiles: [ReleaseCreateRequestProvision]?
    /** If true this release was uploaded to the AKS upload proxy */
    public var proxyFlow: Bool?

    public init(version: String?, buildVersion: String?, uniqueIdentifier: String?, minimumOsVersion: String?, deviceFamily: String?, languages: [String]?, fingerprint: String, size: Int, packageUrl: String?, fileExtension: String?, uploadId: String, iconAssetId: String?, ipaUuids: [ReleaseCreateRequestIpaUuids]?, provision: ReleaseCreateRequestProvision?, appexProvisioningProfiles: [ReleaseCreateRequestProvision]?, proxyFlow: Bool?) {
        self.version = version
        self.buildVersion = buildVersion
        self.uniqueIdentifier = uniqueIdentifier
        self.minimumOsVersion = minimumOsVersion
        self.deviceFamily = deviceFamily
        self.languages = languages
        self.fingerprint = fingerprint
        self.size = size
        self.packageUrl = packageUrl
        self.fileExtension = fileExtension
        self.uploadId = uploadId
        self.iconAssetId = iconAssetId
        self.ipaUuids = ipaUuids
        self.provision = provision
        self.appexProvisioningProfiles = appexProvisioningProfiles
        self.proxyFlow = proxyFlow
    }

    public enum CodingKeys: String, CodingKey, CaseIterable { 
        case version
        case buildVersion = "build_version"
        case uniqueIdentifier = "unique_identifier"
        case minimumOsVersion = "minimum_os_version"
        case deviceFamily = "device_family"
        case languages
        case fingerprint
        case size
        case packageUrl = "package_url"
        case fileExtension = "file_extension"
        case uploadId = "upload_id"
        case iconAssetId = "icon_asset_id"
        case ipaUuids = "ipa_uuids"
        case provision
        case appexProvisioningProfiles = "appex_provisioning_profiles"
        case proxyFlow = "proxy_flow"
    }

}
