//
// CodePushRelease.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation


public struct CodePushRelease: Codable {

    public enum ReleaseMethod: String, Codable, CaseIterable {
        case upload = "Upload"
        case promote = "Promote"
        case rollback = "Rollback"
    }
    public var targetBinaryRange: String?
    public var description: String?
    public var isDisabled: Bool?
    public var isMandatory: Bool?
    public var rollout: Int?
    public var label: String?
    public var packageHash: String?
    public var blobUrl: String?
    public var diffPackageMap: [String:CodePushReleaseAllOf1DiffPackageMap]?
    /** Set on &#39;Promote&#39; */
    public var originalDeployment: String?
    /** Set on &#39;Promote&#39; and &#39;Rollback&#39; */
    public var originalLabel: String?
    public var releasedBy: String?
    /** The release method is unknown if unspecified */
    public var releaseMethod: ReleaseMethod?
    public var size: Double?
    public var uploadTime: Int?

    public init(targetBinaryRange: String?, description: String?, isDisabled: Bool?, isMandatory: Bool?, rollout: Int?, label: String?, packageHash: String?, blobUrl: String?, diffPackageMap: [String:CodePushReleaseAllOf1DiffPackageMap]?, originalDeployment: String?, originalLabel: String?, releasedBy: String?, releaseMethod: ReleaseMethod?, size: Double?, uploadTime: Int?) {
        self.targetBinaryRange = targetBinaryRange
        self.description = description
        self.isDisabled = isDisabled
        self.isMandatory = isMandatory
        self.rollout = rollout
        self.label = label
        self.packageHash = packageHash
        self.blobUrl = blobUrl
        self.diffPackageMap = diffPackageMap
        self.originalDeployment = originalDeployment
        self.originalLabel = originalLabel
        self.releasedBy = releasedBy
        self.releaseMethod = releaseMethod
        self.size = size
        self.uploadTime = uploadTime
    }

    public enum CodingKeys: String, CodingKey, CaseIterable { 
        case targetBinaryRange = "target_binary_range"
        case description
        case isDisabled = "is_disabled"
        case isMandatory = "is_mandatory"
        case rollout
        case label
        case packageHash = "package_hash"
        case blobUrl = "blob_url"
        case diffPackageMap = "diff_package_map"
        case originalDeployment = "original_deployment"
        case originalLabel = "original_label"
        case releasedBy = "released_by"
        case releaseMethod = "release_method"
        case size
        case uploadTime = "upload_time"
    }

}
