//
// InlineResponse20059.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation

/** Details of an uploaded release */
public struct InlineResponse20059: Codable {

    public enum Status: String, Codable, CaseIterable {
        case available = "available"
        case unavailable = "unavailable"
    }
    public enum InstallUrl: String, Codable, CaseIterable {
        case group = "group"
        case store = "store"
    }
    /** ID identifying this unique release. */
    public var id: Double?
    /** OBSOLETE. Will be removed in next version. The availability concept is now replaced with distributed. Any &#39;available&#39; release will be associated with the default distribution group of an app.&lt;/br&gt; The release state.&lt;br&gt; &lt;b&gt;available&lt;/b&gt;: The uploaded release has been distributed.&lt;br&gt; &lt;b&gt;unavailable&lt;/b&gt;: The uploaded release is not visible to the user. &lt;br&gt;  */
    public var status: Status?
    /** The app&#39;s name (extracted from the uploaded release). */
    public var appName: String?
    /** The app&#39;s display name. */
    public var appDisplayName: String?
    /** The release&#39;s version.&lt;br&gt; For iOS: CFBundleVersion from info.plist. For Android: android:versionCode from AppManifest.xml.  */
    public var version: String?
    /** The release&#39;s short version.&lt;br&gt; For iOS: CFBundleShortVersionString from info.plist. For Android: android:versionName from AppManifest.xml.  */
    public var shortVersion: String?
    /** The release&#39;s release notes. */
    public var releaseNotes: String?
    /** The release&#39;s size in bytes. */
    public var size: Double?
    /** The release&#39;s minimum required operating system. */
    public var minOs: String?
    /** The release&#39;s minimum required Android API level. */
    public var androidMinApiLevel: String?
    /** The identifier of the apps bundle. */
    public var bundleIdentifier: String?
    /** MD5 checksum of the release binary. */
    public var fingerprint: String?
    /** UTC time in ISO 8601 format of the uploaded time. */
    public var uploadedAt: String?
    /** The URL that hosts the binary for this release. */
    public var downloadUrl: String?
    /** The href required to install a release on a mobile device. On iOS devices will be prefixed with &#x60;itms-services://?action&#x3D;download-manifest&amp;url&#x3D;&#x60; */
    public var installUrl: InstallUrl?
    /** a list of distribution stores that are associated with this release. */
    public var distributionStores: [V01AppsOwnerNameAppNameDistributionStoresStoreNameReleasesReleaseIdDistributionStores]?

    public init(id: Double?, status: Status?, appName: String?, appDisplayName: String?, version: String?, shortVersion: String?, releaseNotes: String?, size: Double?, minOs: String?, androidMinApiLevel: String?, bundleIdentifier: String?, fingerprint: String?, uploadedAt: String?, downloadUrl: String?, installUrl: InstallUrl?, distributionStores: [V01AppsOwnerNameAppNameDistributionStoresStoreNameReleasesReleaseIdDistributionStores]?) {
        self.id = id
        self.status = status
        self.appName = appName
        self.appDisplayName = appDisplayName
        self.version = version
        self.shortVersion = shortVersion
        self.releaseNotes = releaseNotes
        self.size = size
        self.minOs = minOs
        self.androidMinApiLevel = androidMinApiLevel
        self.bundleIdentifier = bundleIdentifier
        self.fingerprint = fingerprint
        self.uploadedAt = uploadedAt
        self.downloadUrl = downloadUrl
        self.installUrl = installUrl
        self.distributionStores = distributionStores
    }

    public enum CodingKeys: String, CodingKey, CaseIterable { 
        case id
        case status
        case appName = "app_name"
        case appDisplayName = "app_display_name"
        case version
        case shortVersion = "short_version"
        case releaseNotes = "release_notes"
        case size
        case minOs = "min_os"
        case androidMinApiLevel = "android_min_api_level"
        case bundleIdentifier = "bundle_identifier"
        case fingerprint
        case uploadedAt = "uploaded_at"
        case downloadUrl = "download_url"
        case installUrl = "install_url"
        case distributionStores = "distribution_stores"
    }

}
