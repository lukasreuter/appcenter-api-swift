//
// RepoConfig.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation


public struct RepoConfig: Codable {

    public enum State: String, Codable, CaseIterable {
        case unauthorized = "unauthorized"
        case inactive = "inactive"
        case active = "active"
    }
    /** Repository configuration identifier */
    public var id: String?
    /** Type of repository */
    public var type: String?
    /** State of the configuration */
    public var state: State?
    /** Email of the user who linked the repository */
    public var userEmail: String?
    /** The repository&#39;s git url, must be a HTTPS URL */
    public var repoUrl: String?
    /** The repository id from the repository provider. Required for repositories connected from GitHub App and GitLab.com */
    public var repoId: String?
    /** The external user id from the repository provider. Required for GitLab.com repositories */
    public var externalUserId: String?
    /** The id of the service connection (private). Required for GitLab self-hosted repositories */
    public var serviceConnectionId: String?

    public init(id: String?, type: String?, state: State?, userEmail: String?, repoUrl: String?, repoId: String?, externalUserId: String?, serviceConnectionId: String?) {
        self.id = id
        self.type = type
        self.state = state
        self.userEmail = userEmail
        self.repoUrl = repoUrl
        self.repoId = repoId
        self.externalUserId = externalUserId
        self.serviceConnectionId = serviceConnectionId
    }

    public enum CodingKeys: String, CodingKey, CaseIterable { 
        case id
        case type
        case state
        case userEmail = "user_email"
        case repoUrl = "repo_url"
        case repoId = "repo_id"
        case externalUserId = "external_user_id"
        case serviceConnectionId = "service_connection_id"
    }

}
