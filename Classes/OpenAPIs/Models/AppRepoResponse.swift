//
// AppRepoResponse.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation


public struct AppRepoResponse: Codable {

    public enum RepoProvider: String, Codable, CaseIterable {
        case github = "github"
        case bitbucket = "bitbucket"
        case vsts = "vsts"
        case gitlab = "gitlab"
    }
    /** The unique id (UUID) of the repository integration */
    public var id: UUID
    /** The unique id (UUID) of the app that this repository integration belongs to */
    public var appId: UUID
    /** The absolute URL of the repository */
    public var repoUrl: String
    /** The provider of the repository */
    public var repoProvider: RepoProvider?
    /** The unique id (UUID) of the user who configured the repository */
    public var userId: UUID
    /** Installation id from the provider */
    public var installationId: String?
    /** Repository id from the provider */
    public var repoId: String?
    /** User id from the provider */
    public var externalUserId: String?
    /** The id of the service connection stored in customer credential store */
    public var serviceConnectionId: UUID?

    public init(id: UUID, appId: UUID, repoUrl: String, repoProvider: RepoProvider?, userId: UUID, installationId: String?, repoId: String?, externalUserId: String?, serviceConnectionId: UUID?) {
        self.id = id
        self.appId = appId
        self.repoUrl = repoUrl
        self.repoProvider = repoProvider
        self.userId = userId
        self.installationId = installationId
        self.repoId = repoId
        self.externalUserId = externalUserId
        self.serviceConnectionId = serviceConnectionId
    }

    public enum CodingKeys: String, CodingKey, CaseIterable { 
        case id
        case appId = "app_id"
        case repoUrl = "repo_url"
        case repoProvider = "repo_provider"
        case userId = "user_id"
        case installationId = "installation_id"
        case repoId = "repo_id"
        case externalUserId = "external_user_id"
        case serviceConnectionId = "service_connection_id"
    }

}
