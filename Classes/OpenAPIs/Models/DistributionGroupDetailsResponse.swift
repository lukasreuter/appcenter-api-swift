//
// DistributionGroupDetailsResponse.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation


public struct DistributionGroupDetailsResponse: Codable {

    public enum Origin: String, Codable, CaseIterable {
        case appcenter = "appcenter"
        case hockeyapp = "hockeyapp"
    }
    public enum GroupType: String, Codable, CaseIterable {
        case _default = "Default"
        case hockeyAppDefault = "HockeyAppDefault"
        case microsoftDogfooding = "MicrosoftDogfooding"
    }
    /** The unique ID of the distribution group */
    public var id: UUID
    /** The name of the distribution group used in URLs */
    public var name: String
    /** The name of the distribution group */
    public var displayName: String?
    /** The creation origin of this distribution group */
    public var origin: Origin
    /** Whether the distribution group is public */
    public var isPublic: Bool
    /** Whether the distribution group is shared group or not */
    public var isShared: Bool?
    /** The count of apps associated with this distribution group */
    public var totalAppsCount: Double?
    /** The count of users in the distribution group */
    public var totalUserCount: Double?
    /** The count of non-pending users in the distribution group who will be notified by new releases */
    public var notifiedUserCount: Double?
    /** Type of group (Default, HockeyAppDefault or MicrosoftDogfooding) */
    public var groupType: GroupType?
    /** The distribution group users */
    public var users: [InlineResponse20010]?

    public init(id: UUID, name: String, displayName: String?, origin: Origin, isPublic: Bool, isShared: Bool?, totalAppsCount: Double?, totalUserCount: Double?, notifiedUserCount: Double?, groupType: GroupType?, users: [InlineResponse20010]?) {
        self.id = id
        self.name = name
        self.displayName = displayName
        self.origin = origin
        self.isPublic = isPublic
        self.isShared = isShared
        self.totalAppsCount = totalAppsCount
        self.totalUserCount = totalUserCount
        self.notifiedUserCount = notifiedUserCount
        self.groupType = groupType
        self.users = users
    }

    public enum CodingKeys: String, CodingKey, CaseIterable { 
        case id
        case name
        case displayName = "display_name"
        case origin
        case isPublic = "is_public"
        case isShared = "is_shared"
        case totalAppsCount = "total_apps_count"
        case totalUserCount = "total_user_count"
        case notifiedUserCount = "notified_user_count"
        case groupType = "group_type"
        case users
    }

}
